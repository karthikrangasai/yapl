EMPTY                           -->  [1]  {EMPTY, }

IDENTIFIER                      -->  [1]  {IDENTIFIER, }

FUNCTION_IDENTIFIER             -->  [1]  {FUNCTION_IDENTIFIER, }

FUNTION_KEYWORD                 -->  [1]  {FUNTION_KEYWORD, }

MODULO_OPERATOR                 -->  [1]  {MODULO_OPERATOR, }

DIVISION_OPERATOR               -->  [1]  {DIVISION_OPERATOR, }

MULTIPLICATION_OPERATOR         -->  [1]  {MULTIPLICATION_OPERATOR, }

ADDITION_OPERATOR               -->  [1]  {ADDITION_OPERATOR, }

SUBTRACTION_OPERATOR            -->  [1]  {SUBTRACTION_OPERATOR, }

LEFT_PARENTHESES                -->  [1]  {LEFT_PARENTHESES, }

RIGHT_PARENTHESES               -->  [1]  {RIGHT_PARENTHESES, }

LEFT_FLOWER_BRACKET             -->  [1]  {LEFT_FLOWER_BRACKET, }

RIGHT_FLOWER_BRACKET            -->  [1]  {RIGHT_FLOWER_BRACKET, }

COMMA_SEPARATOR                 -->  [1]  {COMMA_SEPARATOR, }

SEMI_COLON_SEPARATOR            -->  [1]  {SEMI_COLON_SEPARATOR, }

BINDING_OPERATOR                -->  [1]  {BINDING_OPERATOR, }

END_DEFINITION_KEYWORD          -->  [1]  {END_DEFINITION_KEYWORD, }

POSITIVE_INTEGER                -->  [1]  {POSITIVE_INTEGER, }

TRUE_KEYWORD                    -->  [1]  {TRUE_KEYWORD, }

FALSE_KEYWORD                   -->  [1]  {FALSE_KEYWORD, }

BOOLEAN_KEYWORD                 -->  [1]  {BOOLEAN_KEYWORD, }

INTEGER_KEYWORD                 -->  [1]  {INTEGER_KEYWORD, }

VOID_KEYWORD                    -->  [1]  {VOID_KEYWORD, }

LESS_THAN_EQUAL_OPERATOR        -->  [1]  {LESS_THAN_EQUAL_OPERATOR, }

GREATER_THAN_EQUAL_OPERATOR     -->  [1]  {GREATER_THAN_EQUAL_OPERATOR, }

LESS_THAN_OPERATOR              -->  [1]  {LESS_THAN_OPERATOR, }

GREATER_THAN_OPERATOR           -->  [1]  {GREATER_THAN_OPERATOR, }

EQAULITY_OPERATOR               -->  [1]  {EQAULITY_OPERATOR, }

INEQUALITY_OPERATOR             -->  [1]  {INEQUALITY_OPERATOR, }

ASSIGNMENT_OPERATOR             -->  [1]  {ASSIGNMENT_OPERATOR, }

BREAK_KEYWORD                   -->  [1]  {BREAK_KEYWORD, }

CONTINUE_KEYWORD                -->  [1]  {CONTINUE_KEYWORD, }

RETURN_KEYWORD                  -->  [1]  {RETURN_KEYWORD, }

WHILE_KEYWORD                   -->  [1]  {WHILE_KEYWORD, }

END_KEYWORD                     -->  [1]  {END_KEYWORD, }

IF_KEYWORD                      -->  [1]  {IF_KEYWORD, }

ELSE_KEYWORD                    -->  [1]  {ELSE_KEYWORD, }

END_MARKER                      -->  [1]  {END_MARKER, }

PROGRAM                         -->  [2]  {EMPTY, FUNTION_KEYWORD, }

FUNCTIONS                       -->  [2]  {EMPTY, FUNTION_KEYWORD, }

FUNCTION                        -->  [1]  {FUNTION_KEYWORD, }

FUNCTION_PARAMETERS             -->  [3]  {VOID_KEYWORD, BOOLEAN_KEYWORD, INTEGER_KEYWORD, }

PARAMETERS                      -->  [2]  {BOOLEAN_KEYWORD, INTEGER_KEYWORD, }

MORE_PARAMETERS                 -->  [2]  {COMMA_SEPARATOR, EMPTY, }

PARAMETER                       -->  [2]  {BOOLEAN_KEYWORD, INTEGER_KEYWORD, }

COMPOUND_STATEMENTS             -->  [10]  {EMPTY, WHILE_KEYWORD, IF_KEYWORD, BREAK_KEYWORD, CONTINUE_KEYWORD, RETURN_KEYWORD, FUNCTION_IDENTIFIER, BOOLEAN_KEYWORD, INTEGER_KEYWORD, IDENTIFIER, }

STATEMENT                       -->  [9]  {WHILE_KEYWORD, IF_KEYWORD, BREAK_KEYWORD, CONTINUE_KEYWORD, RETURN_KEYWORD, FUNCTION_IDENTIFIER, BOOLEAN_KEYWORD, INTEGER_KEYWORD, IDENTIFIER, }

LOOP_STATEMENT                  -->  [1]  {WHILE_KEYWORD, }

CONDITIONAL_STATEMENTS          -->  [1]  {IF_KEYWORD, }

ELSE_STATEMENT                  -->  [2]  {ELSE_KEYWORD, EMPTY, }

BREAK_STATEMENTS                -->  [3]  {BREAK_KEYWORD, CONTINUE_KEYWORD, RETURN_KEYWORD, }

RETURN_ENTITY                   -->  [6]  {VOID_KEYWORD, LEFT_PARENTHESES, FUNCTION_IDENTIFIER, IDENTIFIER, POSITIVE_INTEGER, SUBTRACTION_OPERATOR, }

FUNCTION_CALL                   -->  [1]  {FUNCTION_IDENTIFIER, }

ARGUEMENTS                      -->  [5]  {VOID_KEYWORD, FUNCTION_IDENTIFIER, IDENTIFIER, POSITIVE_INTEGER, SUBTRACTION_OPERATOR, }

ADDITIONAL_ARGUMENTS            -->  [2]  {COMMA_SEPARATOR, EMPTY, }

INITIALIZATION_STATEMENTS       -->  [3]  {BOOLEAN_KEYWORD, INTEGER_KEYWORD, IDENTIFIER, }

ASSIGN_STATEMENT                -->  [2]  {ASSIGNMENT_OPERATOR, EMPTY, }

TERMIMAL_EXPRESSIONS            -->  [4]  {FUNCTION_IDENTIFIER, IDENTIFIER, POSITIVE_INTEGER, SUBTRACTION_OPERATOR, }

ADDITIONAL_TERMINALS            -->  [2]  {COMMA_SEPARATOR, EMPTY, }

EXPRESSION                      -->  [5]  {LEFT_PARENTHESES, FUNCTION_IDENTIFIER, IDENTIFIER, POSITIVE_INTEGER, SUBTRACTION_OPERATOR, }

LOGICAL_EXPRESSION              -->  [5]  {LEFT_PARENTHESES, FUNCTION_IDENTIFIER, IDENTIFIER, POSITIVE_INTEGER, SUBTRACTION_OPERATOR, }

RELATIONAL_EXPRESSION           -->  [5]  {LEFT_PARENTHESES, FUNCTION_IDENTIFIER, IDENTIFIER, POSITIVE_INTEGER, SUBTRACTION_OPERATOR, }

RELATION_OPERATION              -->  [7]  {EMPTY, INEQUALITY_OPERATOR, EQAULITY_OPERATOR, GREATER_THAN_EQUAL_OPERATOR, LESS_THAN_EQUAL_OPERATOR, GREATER_THAN_OPERATOR, LESS_THAN_OPERATOR, }

MORE_REL_OP                     -->  [7]  {EMPTY, INEQUALITY_OPERATOR, EQAULITY_OPERATOR, GREATER_THAN_EQUAL_OPERATOR, LESS_THAN_EQUAL_OPERATOR, GREATER_THAN_OPERATOR, LESS_THAN_OPERATOR, }

NUMERIC_EXPRESSION              -->  [4]  {FUNCTION_IDENTIFIER, IDENTIFIER, POSITIVE_INTEGER, SUBTRACTION_OPERATOR, }

NUMERIC_OPERATION               -->  [3]  {ADDITION_OPERATOR, SUBTRACTION_OPERATOR, EMPTY, }

MULTIPLICATION_EXPRESSION       -->  [4]  {FUNCTION_IDENTIFIER, IDENTIFIER, POSITIVE_INTEGER, SUBTRACTION_OPERATOR, }

MULTIPLICATION_OPERATION        -->  [4]  {MULTIPLICATION_OPERATOR, DIVISION_OPERATOR, MODULO_OPERATOR, EMPTY, }

REL_OP                          -->  [6]  {INEQUALITY_OPERATOR, EQAULITY_OPERATOR, GREATER_THAN_EQUAL_OPERATOR, LESS_THAN_EQUAL_OPERATOR, GREATER_THAN_OPERATOR, LESS_THAN_OPERATOR, }

REL_EQ_OP                       -->  [2]  {INEQUALITY_OPERATOR, EQAULITY_OPERATOR, }

REL_INEQ_OP                     -->  [4]  {GREATER_THAN_EQUAL_OPERATOR, LESS_THAN_EQUAL_OPERATOR, GREATER_THAN_OPERATOR, LESS_THAN_OPERATOR, }

TERMIMAL_EXPRESSION             -->  [4]  {FUNCTION_IDENTIFIER, IDENTIFIER, POSITIVE_INTEGER, SUBTRACTION_OPERATOR, }

TERMINAL_ID                     -->  [1]  {IDENTIFIER, }

RETURN_TYPE                     -->  [3]  {VOID_KEYWORD, BOOLEAN_KEYWORD, INTEGER_KEYWORD, }

DATA_TYPE                       -->  [2]  {BOOLEAN_KEYWORD, INTEGER_KEYWORD, }

BOOLEAN                         -->  [2]  {TRUE_KEYWORD, FALSE_KEYWORD, }

INTEGER                         -->  [2]  {POSITIVE_INTEGER, SUBTRACTION_OPERATOR, }

NEGATIVE_INTEGER                -->  [1]  {SUBTRACTION_OPERATOR, }

